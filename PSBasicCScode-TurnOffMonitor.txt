$testcode = @"
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;

namespace ConsoleApplication1
{
   public class Program
   {
   [DllImport("User32.dll")]
   public static extern int MessageBox(int h, string m, string c, int type);

       public static void Main(string[] args)
        {
      string myString = "The Wonderful World of C# Programming";
      Console.WriteLine(myString);

      MessageBox(0, "The Wonderful World of C# Programming", "My Message Box", 0);
        }
    }
}
"@
iex "[ConsoleApplication1.Program]::Main('a')"








function Turn-MonitorOff ()
{
    [CmdletBinding()]
    param()
 
    $HWND = -1
    $WM_SYSCOMMAND = 0x0112
    $SC_MONITORPOWER = 0xF170
    $MONITOR_ON = -1
    $MONITOR_OFF = 2
  
    #Store the C# signature of the SendMessage function. 
    $signature = '[DllImport("user32.dll")] public static extern int PostMessage(int hWnd, int hMsg, int wParam, int lParam);'
  
    #Add the SendMessage function as a static method of a class
    $SendMessage = Add-Type -MemberDefinition $signature -Name "Win32SendMessage" -Namespace Win32Functions -PassThru
     
    #Invoke the SendMessage Function
    $SendMessage::PostMessage($HWND, $WM_SYSCOMMAND, $SC_MONITORPOWER, $MONITOR_OFF) | Out-Null
     
}
------------------------------------------------------







[System.Windows.Forms.MessageBox]::Show("Your message here!", 'This is my title', 'YesNo', 'Information')





